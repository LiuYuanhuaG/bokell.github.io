<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>css 使用js中的变量 var()</title>
    <url>/eternallycyf/css%20%E4%BD%BF%E7%94%A8js%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F%20var()/</url>
    <content><![CDATA[<h1 id="var"><a href="#var" class="headerlink" title="var()"></a>var()</h1><h2 id="导读"><a href="#导读" class="headerlink" title="导读"></a>导读</h2><ul>
<li>这篇文章所指的<code>css</code>变量, 并不是指 <code>less</code> 等预编译语言的变量<code>(@)</code></li>
<li>而是直接在 <code>.css</code> 页面中使用 <code>.js|.html</code> 中所定义的变量 (<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/var()">var()-mdn</a>)</li>
<li>一般情况下 前端样式只要通过 js动态切换不同类名 行内样式</li>
<li>就可以在<code>React Vue</code> 中完成绝大多数的需求了</li>
<li>但是有些使用场景就需要原生 <code>css</code> 的 <code>var()</code> 变量。 或者说使用他可以达到更加方便的效果<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 假设使用了一个组件库的一个小圆点, 而他内部是通过伪元素做的</span></span><br><span class="line"><span class="comment">// 此时的需求是 小圆点的颜色由用户决定,不是一个固定的值,你该如何控制呢?</span></span><br><span class="line"><span class="comment">// 我们通常的做法是 </span></span><br><span class="line"><span class="comment">//    1.定义不同的类名切换:  x =&gt; 颜色不是一个固定的值</span></span><br><span class="line"><span class="comment">//    2.行内样式直接传递:   x =&gt; 行内样式不能修改伪元素</span></span><br><span class="line"><span class="comment">//    3.自己重写:         x =&gt; 麻烦,这里只是一个用例,某些场景会极其繁琐</span></span><br><span class="line"><span class="comment">//    4.css in js       x =&gt; 公司项目一般不用这个 </span></span><br><span class="line"><span class="comment">//    5.dom操作          x =&gt; 不推荐</span></span><br><span class="line">这时候<span class="keyword">var</span>()就应运而生了</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="原生html"><a href="#原生html" class="headerlink" title="原生html"></a>原生html</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># index.html </span><br><span class="line">&lt;style&gt;</span><br><span class="line">  #dv &#123;</span><br><span class="line">    <span class="attr">color</span>: <span class="keyword">var</span>(--color);</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;dv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">let</span> clickColor = <span class="string">&#x27;cornflowerblue&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">const</span> dv = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;dv&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    dv.innerHTML = <span class="string">`&lt;div id=&#x27;dv&#x27; style=&quot;--color:<span class="subst">$&#123;myColor&#125;</span>&quot;&gt;css&lt;/div&gt;`</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h2 id="jsx"><a href="#jsx" class="headerlink" title="jsx"></a>jsx</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">&#x27;./app.module.css&#x27;</span></span><br><span class="line"><span class="keyword">const</span> App = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> clickColor = <span class="string">&#x27;red&#x27;</span></span><br><span class="line">  <span class="keyword">const</span> style = &#123; <span class="string">&quot;--color&quot;</span>: clickColor&#125;;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;styles.header&#125;</span> <span class="attr">style</span>=<span class="string">&#123;style&#125;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      hello</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br><span class="line">#</span><br><span class="line">.header &#123;</span><br><span class="line">  <span class="attr">color</span>: <span class="keyword">var</span>(--color)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="tsx"><a href="#tsx" class="headerlink" title="tsx"></a>tsx</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">&#x27;./app.module.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">const</span> App = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> clickColor = <span class="string">&#x27;red&#x27;</span></span><br><span class="line">  <span class="keyword">const</span> style = &#123; <span class="string">&quot;--color&quot;</span>: clickColor&#125; <span class="keyword">as</span> React.CSSProperties;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;styles.header&#125;</span> <span class="attr">style</span>=<span class="string">&#123;style&#125;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      hello</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br><span class="line">#</span><br><span class="line">.header &#123;</span><br><span class="line">  <span class="attr">color</span>: <span class="keyword">var</span>(--color)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="vue2"><a href="#vue2" class="headerlink" title="vue2"></a>vue2</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	<span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">span</span> <span class="attr">:style</span>=<span class="string">&quot;spanStyle&quot;</span> <span class="attr">class</span>=<span class="string">&quot;span1&quot;</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;--color:red&quot;</span> <span class="attr">class</span>=<span class="string">&quot;span1&quot;</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">	<span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		<span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">			<span class="attr">spanStyle</span>: &#123; <span class="string">&quot;--color&quot;</span>: <span class="string">&quot;green&quot;</span> &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		&#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">	&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.span1</span> &#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">	<span class="attribute">color</span>: <span class="built_in">var</span>(--color);</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>


<h2 id="vue3"><a href="#vue3" class="headerlink" title="vue3"></a>vue3</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># vue3提供了API 直接v-bind就可以使用了</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.span1 &#123;</span><br><span class="line">	<span class="attr">color</span>: v-bind(变量);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>一篇搞懂 Webpack 常用的配置</title>
    <url>/eternallycyf/%E4%B8%80%E7%AF%87%E6%90%9E%E6%87%82%20Webpack%20%E5%B8%B8%E7%94%A8%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="1-认识-Webpack"><a href="#1-认识-Webpack" class="headerlink" title="1.认识 Webpack"></a>1.认识 Webpack</h2><h3 id="Webpack-是什么"><a href="#Webpack-是什么" class="headerlink" title="Webpack 是什么?"></a>Webpack 是什么?</h3><ul>
<li><a href="https://webpack.docschina.org/concepts/">官方的定义</a><ul>
<li><code>Webpack</code> 是一个用于现代 <code>JavaScript</code> 应用程序的 静态模块打包工具。</li>
<li>当<code>Webpack</code> 处理应用程序时，</li>
<li>它会在内部从一个或多个入口点构建一个 依赖图(<code>dependency graph</code>)</li>
<li>然后将你项目中所需的每一个模块组合成一个或多个 <code>bundles</code>，它们均为静态资源，用于展示你的内容</li>
</ul>
</li>
<li>简单的说<ul>
<li>之前<ul>
<li>在<code>2010</code>年左右,前端当时还是利用 <code>jQuery</code> 进行开发</li>
<li>后端利用 <code>php jsp</code> 等技术将数据库的数据渲染到前端的页面上</li>
<li>前后端开始是耦合的 维护和开发 都是一个不规范 繁琐的流程</li>
</ul>
</li>
<li>现在<ul>
<li>当三大框架的横行后 逐渐以<code>MVVM</code>(<code>Model-View-ViewModel</code>)模式来 </li>
<li>减少繁琐的 <code>DOM</code> 操作,以数据来驱动视图的变化,更加利于维护和开发</li>
</ul>
</li>
<li>为什么使用<ul>
<li>原生<code>js</code>不会提供所有的特性, 因此就需要引入各种插件</li>
<li>而<code>Webpack</code>就是大一统的集成方案</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="Webpack-可以做什么"><a href="#Webpack-可以做什么" class="headerlink" title="Webpack 可以做什么"></a>Webpack 可以做什么</h3><ul>
<li>使用<code>Webpack</code>作为前端构建工具通常可以做到以下几个方面的事情<ul>
<li>代码转换: <code>TypeScript</code>编译成<code>JavaScript</code>、<code>SCSS</code>编译成<code>CSS</code>等。</li>
<li>文件优化: 压缩<code>JavaScript</code>、<code>CSS</code>、<code>HTML</code>代码，压缩合并图片等。</li>
<li>代码分割: 提取多个页面的公共代码、提取首屏不需要执行部分的代码让其异步加载。</li>
<li>模块合并: 在采用模块化的项目里会有很多个模块和文件，需要构建功能把模块分类合并成一个文件。</li>
<li>自动刷新: 监听本地源代码的变化，自动重新构建、刷新浏览器页面，通常叫做模块热替换<code>HMR</code>。</li>
<li>代码校验: 在代码被提交到仓库前需要校验代码是否符合规范，以及单元测试是否通过。</li>
<li>自动发布: 更新完代码后，自动构建出线上发布代码并传输给发布系统。</li>
</ul>
</li>
</ul>
<h2 id="2-搭建-Webpack"><a href="#2-搭建-Webpack" class="headerlink" title="2.搭建 Webpack"></a>2.搭建 Webpack</h2><h3 id="搭建基本环境"><a href="#搭建基本环境" class="headerlink" title="搭建基本环境"></a>搭建基本环境</h3><ul>
<li>安装最新的环境, 新建一个文件夹叫 <code>test</code></li>
<li><code>test</code> 根路径下载基本的依赖<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yarn add webpack webpack-cli --save-dev</span><br><span class="line">yarn add webpack-dev-server -D</span><br><span class="line">yarn add html-webpack-plugin --save-dev</span><br></pre></td></tr></table></figure></li>
<li>在 <code>test/package.json</code> 文件添加启动和打包的 <code>shell</code> 命令<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;serve&quot;: &quot;webpack serve &quot;,</span><br><span class="line">    &quot;build&quot;: &quot;webpack&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li>
<li>新建基本的文件<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># dist 目录不用手动创建 这个是打包自动生成的</span><br><span class="line">|-- node_modules</span><br><span class="line">├── dist</span><br><span class="line">│   └── main.js</span><br><span class="line">├── public</span><br><span class="line">│   └── index.html</span><br><span class="line">├── package.json</span><br><span class="line">├── src</span><br><span class="line">│   └── index.js</span><br><span class="line">└── webpack.config.js</span><br></pre></td></tr></table></figure></li>
<li>在 webpack.config.js 文件写入基本的配置<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 这些配置后面会具体解释 这里主要配置了打包的出口文件和入口文件</span><br><span class="line"># webpack.config.js</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">entry</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;main.js&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>: path.resolve(__dirname, <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&quot;development&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote>此时就完成了基本的搭建,可以来使用shell语句测试一下效果了</blockquote>

<ul>
<li>在 <code>/src/index.js</code> 写入 <code>console.log(&#39;Hello Webpck&#39;);</code></li>
<li>然后在项目根路径执行之前在<code>package.json</code>定义的<code>shell</code>命令 </li>
<li><code>yarn build</code> 就在在 <code>/dist/main.js</code> 发现转换后的代码了</li>
<li>但是目前还是不能展示html页面 和 启动服务</li>
<li>在下一阶段就将安装两个必要的插件</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ATTENTION: The &quot;eval&quot; devtool has been used (maybe by default in mode: &quot;development&quot;).</span></span><br><span class="line"><span class="comment"> * This devtool is neither made for production nor for readable output files.</span></span><br><span class="line"><span class="comment"> * It uses &quot;eval()&quot; calls to create a separate source file in the browser devtools.</span></span><br><span class="line"><span class="comment"> * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)</span></span><br><span class="line"><span class="comment"> * or disable the default devtool with &quot;devtool: false&quot;.</span></span><br><span class="line"><span class="comment"> * If you are looking for production-ready output files, see mode: &quot;production&quot; (https://webpack.js.org/configuration/mode/).</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/******/</span> (<span class="function">() =&gt;</span> &#123; <span class="comment">// webpackBootstrap</span></span><br><span class="line"><span class="comment">/******/</span> 	<span class="keyword">var</span> __webpack_modules__ = (&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***/</span> <span class="string">&quot;./src/index.js&quot;</span>:</span><br><span class="line"><span class="comment">/*!**********************!*\</span></span><br><span class="line"><span class="comment">  !*** ./src/index.js ***!</span></span><br><span class="line"><span class="comment">  \**********************/</span></span><br><span class="line"><span class="comment">/***/</span> (<span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">eval</span>(<span class="string">&quot;console.log(&#x27;Hello Webpck&#x27;);\n\n//# sourceURL=webpack:///./src/index.js?&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/***/</span> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/******/</span> 	&#125;);</span><br><span class="line"><span class="comment">/************************************************************************/</span></span><br><span class="line"><span class="comment">/******/</span> 	</span><br><span class="line"><span class="comment">/******/</span> 	<span class="comment">// startup</span></span><br><span class="line"><span class="comment">/******/</span> 	<span class="comment">// Load entry module and return exports</span></span><br><span class="line"><span class="comment">/******/</span> 	<span class="comment">// This entry module can&#x27;t be inlined because the eval devtool is used.</span></span><br><span class="line"><span class="comment">/******/</span> 	<span class="keyword">var</span> __webpack_exports__ = &#123;&#125;;</span><br><span class="line"><span class="comment">/******/</span> 	__webpack_modules__[<span class="string">&quot;./src/index.js&quot;</span>]();</span><br><span class="line"><span class="comment">/******/</span> 	</span><br><span class="line"><span class="comment">/******/</span> &#125;)()</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<h2 id="3-配置插件"><a href="#3-配置插件" class="headerlink" title="3.配置插件"></a>3.配置插件</h2><h3 id="导读"><a href="#导读" class="headerlink" title="导读"></a>导读</h3><ul>
<li>自己可以去<code>npm</code> 搜索各种<code>loader</code> 获取更多具体的配置</li>
<li>这里仅仅配置了我用过的常用配置</li>
<li><a href="https://www.npmjs.com/search?q=loader">npm-loader</a></li>
<li>配置插件章节的项目最终结构</li>
</ul>
<h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── dist</span><br><span class="line">│   ├── index.html</span><br><span class="line">│   ├── main.js</span><br><span class="line">│   └── public</span><br><span class="line">│       ├── assets</span><br><span class="line">│       │   └── images</span><br><span class="line">│       │       └── 99b6d6d0aac2e1ab068e.png</span><br><span class="line">│       └── <span class="keyword">static</span></span><br><span class="line">│           └── e7c3da3c784524f42673.html</span><br><span class="line">├── node_modules</span><br><span class="line">├── package.json</span><br><span class="line">├── public</span><br><span class="line">│   ├── avatar.png</span><br><span class="line">│   └── index.html</span><br><span class="line">├── src</span><br><span class="line">│   ├── index.js</span><br><span class="line">│   └── index.less</span><br><span class="line">└── webpack.config.js</span><br></pre></td></tr></table></figure>

<h4 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">./public/index.html</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  html5</span><br><span class="line">  &lt;img id=<span class="string">&#x27;im&#x27;</span> src=<span class="string">&quot;&quot;</span> alt=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>

<h4 id="index-js"><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># ./src/index.js</span><br><span class="line"><span class="keyword">import</span> avatar <span class="keyword">from</span> <span class="string">&#x27;../public/avatar.png&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./index.less&#x27;</span></span><br><span class="line"><span class="keyword">const</span> im = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;im&#x27;</span>)</span><br><span class="line">im.src = avatar</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Hello Webpck&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> aaaa = <span class="function">() =&gt;</span> <span class="number">10</span></span><br><span class="line"><span class="built_in">console</span>.log(aaaa);</span><br></pre></td></tr></table></figure>

<h4 id="index-less"><a href="#index-less" class="headerlink" title="index.less"></a>index.less</h4><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"># ./<span class="selector-tag">src</span>/<span class="selector-tag">index</span><span class="selector-class">.less</span></span><br><span class="line">@<span class="selector-tag">myColor</span>: <span class="selector-tag">blue</span>;</span><br><span class="line"><span class="selector-tag">li</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">@myColor</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="webpack-config-js"><a href="#webpack-config-js" class="headerlink" title="webpack.config.js"></a>webpack.config.js</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># ./webpack.config.js</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">entry</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;main.js&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>: path.resolve(__dirname, <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">    <span class="comment">// 指定打包后输出的文件夹 ./dist/public/assets/images</span></span><br><span class="line">    <span class="attr">assetModuleFilename</span>: <span class="string">&#x27;public/assets/images/[hash][ext][query]&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&quot;development&quot;</span>,</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="comment">// 启动gzip压缩</span></span><br><span class="line">    <span class="attr">compress</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">port</span>: <span class="number">8088</span>,</span><br><span class="line">    <span class="attr">open</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      <span class="attr">template</span>: <span class="string">&#x27;./public/index.html&#x27;</span>,</span><br><span class="line">      <span class="comment">//要生成的文件名 存在内存 目录中不显示</span></span><br><span class="line">      <span class="attr">filename</span>: <span class="string">&#x27;index.html&#x27;</span>,</span><br><span class="line">      <span class="attr">minify</span>: &#123;</span><br><span class="line">        <span class="comment">// 移除空格</span></span><br><span class="line">        <span class="attr">collapseWhitespace</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="comment">// 移除注释</span></span><br><span class="line">        <span class="attr">removeComments</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.(?:ico|gif|png|jpg|jpeg)$/i</span>,</span><br><span class="line">        type: <span class="string">&#x27;asset/resource&#x27;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// &#123;</span></span><br><span class="line">      <span class="comment">//   test: /\.html/,</span></span><br><span class="line">      <span class="comment">//   type: &#x27;asset/resource&#x27;,</span></span><br><span class="line">      <span class="comment">//   generator: &#123;</span></span><br><span class="line">      <span class="comment">//     filename: &#x27;public/static/[hash][ext][query]&#x27;  // 单独指定名字</span></span><br><span class="line">      <span class="comment">//   &#125;</span></span><br><span class="line">      <span class="comment">// &#125;,</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.svg/</span>,</span><br><span class="line">        type: <span class="string">&#x27;asset/inline&#x27;</span>  <span class="comment">// inline 的时候不需要指定文件名</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.txt/</span>,</span><br><span class="line">        type: <span class="string">&#x27;asset&#x27;</span>,</span><br><span class="line">        <span class="attr">parser</span>: &#123;</span><br><span class="line">          <span class="attr">dataUrlCondition</span>: &#123;</span><br><span class="line">            <span class="attr">maxSize</span>: <span class="number">4</span> * <span class="number">1024</span> <span class="comment">// 4kb  指定大小</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        exclude: <span class="regexp">/(node_modules|bower_components)/</span>,</span><br><span class="line">        use: &#123;</span><br><span class="line">          <span class="attr">loader</span>: <span class="string">&#x27;babel-loader&#x27;</span>,</span><br><span class="line">          <span class="attr">options</span>: &#123;</span><br><span class="line">            <span class="attr">presets</span>: [<span class="string">&#x27;@babel/preset-env&#x27;</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          <span class="string">&#x27;style-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;postcss-loader&#x27;</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.less$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          <span class="string">&#x27;style-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;less-loader&#x27;</span>,</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.scss$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          <span class="string">&#x27;style-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;sass-loader&#x27;</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




<h4 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># package.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;serve&quot;</span>: <span class="string">&quot;webpack serve&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build&quot;</span>: <span class="string">&quot;webpack&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;html-webpack-plugin&quot;</span>: <span class="string">&quot;^5.5.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;webpack&quot;</span>: <span class="string">&quot;^5.69.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;webpack-cli&quot;</span>: <span class="string">&quot;^4.9.2&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;@babel/core&quot;</span>: <span class="string">&quot;^7.17.4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@babel/plugin-proposal-class-properties&quot;</span>: <span class="string">&quot;^7.16.7&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@babel/preset-env&quot;</span>: <span class="string">&quot;^7.16.11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;autoprefixer&quot;</span>: <span class="string">&quot;^10.4.2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;babel-loader&quot;</span>: <span class="string">&quot;^8.2.3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;css-loader&quot;</span>: <span class="string">&quot;^6.6.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;less&quot;</span>: <span class="string">&quot;^4.1.2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;less-loader&quot;</span>: <span class="string">&quot;^10.2.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;node-sass&quot;</span>: <span class="string">&quot;^7.0.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;postcss-loader&quot;</span>: <span class="string">&quot;^6.2.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sass-loader&quot;</span>: <span class="string">&quot;^12.6.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;style-loader&quot;</span>: <span class="string">&quot;^3.3.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;webpack-dev-server&quot;</span>: <span class="string">&quot;^4.7.4&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="webpack-dev-server"><a href="#webpack-dev-server" class="headerlink" title="webpack-dev-server"></a>webpack-dev-server</h3><ul>
<li>这个插件其实就是一个小型的本地服务器 </li>
<li>相关配置也比较简单</li>
<li>其他的具体配置后面再说 </li>
<li>这时候就可以执行 <code>yarn serve</code></li>
<li>此时还没有配置解析html的插件 因此先手动跳转到 <code>main.js</code> 测试下</li>
<li><code>http://localhost:8088/main.js</code><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">yarn add webpack-dev-server -D</span><br><span class="line"># webpack.config.js</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="comment">// 启动gzip压缩</span></span><br><span class="line">    <span class="attr">compress</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 打开的端口</span></span><br><span class="line">    <span class="attr">port</span>: <span class="number">8088</span>,</span><br><span class="line">    <span class="comment">// 启动服务后自动打开网页</span></span><br><span class="line">    <span class="attr">open</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="html-webpack-plugin"><a href="#html-webpack-plugin" class="headerlink" title="html-webpack-plugin"></a>html-webpack-plugin</h3><ul>
<li>这个包显然就是用来解析html的</li>
<li>配置后运行 <code>yarn build</code> 就可以在 <code>dist</code> 目录看到打包后的 <code>index.html</code> 了</li>
<li>同时运行 <code>yarn serve</code> 也可以直接运行解析了<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">yarn add html-webpack-plugin -D</span><br><span class="line"># 在 ./public/index.html 随便写点东西</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  html5</span><br><span class="line">  &lt;img id=<span class="string">&#x27;im&#x27;</span> src=<span class="string">&quot;&quot;</span> alt=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"># webpack.config.js</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">entry</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;main.js&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>: path.resolve(__dirname, <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&quot;development&quot;</span>,</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="comment">// 启动gzip压缩</span></span><br><span class="line">    <span class="attr">compress</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">port</span>: <span class="number">8088</span>,</span><br><span class="line">    <span class="attr">open</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      <span class="comment">// 要生成的index.html路径 </span></span><br><span class="line">      <span class="attr">template</span>: <span class="string">&#x27;./public/index.html&#x27;</span>,</span><br><span class="line">      <span class="comment">//要生成的文件名 存在内存 目录中不显示</span></span><br><span class="line">      <span class="attr">filename</span>: <span class="string">&#x27;index.html&#x27;</span>,</span><br><span class="line">      <span class="attr">minify</span>: &#123;</span><br><span class="line">        <span class="comment">// 移除空格</span></span><br><span class="line">        <span class="attr">collapseWhitespace</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="comment">// 移除注释</span></span><br><span class="line">        <span class="attr">removeComments</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>此时我们完成了基本的架构,现在需要配置各种loader来满足项目的需要</blockquote></li>
</ul>
<h3 id="Asset-Modules"><a href="#Asset-Modules" class="headerlink" title="Asset Modules"></a>Asset Modules</h3><ul>
<li><code>Asset Modules</code> 是一种模块，它允许人们在不配置额外加载器的情况下使用资产文件（字体、图标等）</li>
<li><code>webpack5</code> 不需要再去手动下载三个<code>loader</code>了</li>
<li>在 <code>webpack 5</code> 之前，通常使用:<ul>
<li><code>raw-loader</code>将文件作为字符串导入</li>
<li><code>url-loader</code>将文件作为数据 URI 内联到包中</li>
<li><code>file-loader</code>将文件发送到输出目录</li>
</ul>
</li>
<li><code>Asset Modules</code> 分为4中资源模块<ul>
<li><code>asset/resource</code> 将资源分割为单独的文件，并导出<code>url</code>，就是之前的 <code>file-loader</code>的功能</li>
<li><code>asset/inline</code> 将资源导出为<code>dataURL（url(data:)）</code>的形式，之前的 <code>url-loader</code>的功能</li>
<li><code>asset/source</code> 将资源导出为源码（<code>source code</code>）. 之前的 <code>raw-loader</code> 功能</li>
<li><code>asset</code> 自动选择导出为单独文件或者 <code>dataURL形式（默认为8KB）</code>. 之前有<code>url-loader</code>设置<code>asset size limit</code> 限制实现。</li>
</ul>
</li>
<li>当配置完成后运行 yarn build就会发现 图片也被打包进了dist目录<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 在 ./public 放一张图片 这里选择了avatar.png</span><br><span class="line"># ./src/index.js </span><br><span class="line"><span class="keyword">import</span> avatar <span class="keyword">from</span> <span class="string">&#x27;../public/avatar.png&#x27;</span></span><br><span class="line"><span class="keyword">const</span> im = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;im&#x27;</span>)</span><br><span class="line">im.src = avatar</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Hello Webpck&#x27;</span>);</span><br><span class="line"># webpack.config.js =&gt; <span class="built_in">module</span>.exports.use</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">entry</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;main.js&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>: path.resolve(__dirname, <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">    <span class="comment">// 指定打包后输出的文件夹 ./dist/public/assets/images</span></span><br><span class="line">    <span class="attr">assetModuleFilename</span>: <span class="string">&#x27;public/assets/images/[hash][ext][query]&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&quot;development&quot;</span>,</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="comment">// 启动gzip压缩</span></span><br><span class="line">    <span class="attr">compress</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">port</span>: <span class="number">8088</span>,</span><br><span class="line">    <span class="attr">open</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      <span class="attr">template</span>: <span class="string">&#x27;./public/index.html&#x27;</span>,</span><br><span class="line">      <span class="comment">//要生成的文件名 存在内存 目录中不显示</span></span><br><span class="line">      <span class="attr">filename</span>: <span class="string">&#x27;index.html&#x27;</span>,</span><br><span class="line">      <span class="attr">minify</span>: &#123;</span><br><span class="line">        <span class="comment">// 移除空格</span></span><br><span class="line">        <span class="attr">collapseWhitespace</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="comment">// 移除注释</span></span><br><span class="line">        <span class="attr">removeComments</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.(?:ico|gif|png|jpg|jpeg)$/i</span>,</span><br><span class="line">        type: <span class="string">&#x27;asset/resource&#x27;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// &#123;</span></span><br><span class="line">      <span class="comment">//   test: /\.html/,</span></span><br><span class="line">      <span class="comment">//   type: &#x27;asset/resource&#x27;,</span></span><br><span class="line">      <span class="comment">//   generator: &#123;</span></span><br><span class="line">      <span class="comment">//     filename: &#x27;public/static/[hash][ext][query]&#x27;  // 单独指定名字</span></span><br><span class="line">      <span class="comment">//   &#125;</span></span><br><span class="line">      <span class="comment">// &#125;,</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.svg/</span>,</span><br><span class="line">        type: <span class="string">&#x27;asset/inline&#x27;</span>  <span class="comment">// inline 的时候不需要指定文件名</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.txt/</span>,</span><br><span class="line">        type: <span class="string">&#x27;asset&#x27;</span>,</span><br><span class="line">        <span class="attr">parser</span>: &#123;</span><br><span class="line">          <span class="attr">dataUrlCondition</span>: &#123;</span><br><span class="line">            <span class="attr">maxSize</span>: <span class="number">4</span> * <span class="number">1024</span> <span class="comment">// 4kb  指定大小</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="babel-loader"><a href="#babel-loader" class="headerlink" title="babel-loader"></a>babel-loader</h3><ul>
<li><code>babel-loader</code> 用于转化和识别高级语法</li>
<li>当配置完成后运行 <code>yarn build</code> 可以查看 <code>./dist/main.js</code> 后可以发现<ul>
<li>代码已经将箭头函数转换成了<code>es5</code>了</li>
<li><code>var aaaa = function aaaa() &#123;\n  return 10;\n&#125;;\n\nconsole.log(aaaa);</code></li>
<li>然后注销掉 <code>babel-loader</code> 的规则 重新打包</li>
<li>你会发现 <code>main.js</code> 中还是箭头函数 这就是 <code>babel-loader</code> 的作用之一<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">npm install -D babel-loader @babel/core @babel/preset-env </span><br><span class="line">在 ./src/index.js 加入一个 es6 箭头函数</span><br><span class="line"><span class="keyword">const</span> aaaa = <span class="function">() =&gt;</span> <span class="number">10</span></span><br><span class="line"><span class="built_in">console</span>.log(aaaa);</span><br><span class="line"># webpack.config.js =&gt; <span class="built_in">module</span>.exports.module.rules.xxx</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">test</span>: <span class="regexp">/\.js$/</span>,</span><br><span class="line">  exclude: <span class="regexp">/(node_modules|bower_components)/</span>,</span><br><span class="line">  use: &#123;</span><br><span class="line">    <span class="attr">loader</span>: <span class="string">&#x27;babel-loader&#x27;</span>,</span><br><span class="line">    <span class="attr">options</span>: &#123;</span><br><span class="line">      <span class="attr">presets</span>: [<span class="string">&#x27;@babel/preset-env&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h3 id="css-sass-less-postcss-loader"><a href="#css-sass-less-postcss-loader" class="headerlink" title="css,sass,less,postcss loader"></a>css,sass,less,postcss loader</h3><ul>
<li><code>sass less</code> 大家都知道是<code>css</code>的预编译语言就不用多说了</li>
<li><code>postcss</code> 是用于自动添加<code>css</code>的兼容前缀</li>
<li>接下来就一次性安装多个<code>loader</code><ul>
<li>不过注意 <code>node-sass</code> 的上游依赖需要手动配置镜像或代理 否则一直可能下载失败<a class="btn-beautify blue larger" href="https://www.ydyno.com/archives/1219.html" 
  title="node-sass配置镜像"><i class="far fa-hand-point-right"></i><span>node-sass配置镜像</span></a></li>
</ul>
</li>
<li>配置完成后 就可以看到<code>less-loader</code>生效了</li>
<li>其他的<code>loader</code>,可以自己测试下,这里就不测试了<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">yarn add style-loader css-loader -D </span><br><span class="line">yarn add less-loader less -D</span><br><span class="line">yarn add sass-loader node-sass -D</span><br><span class="line">yarn add postcss-loader autoprefixer -D</span><br><span class="line"># ./public/index.html </span><br><span class="line">ul&gt;li&#123;$&#125;*<span class="number">3</span></span><br><span class="line"># ./src/index.js</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./index.less&#x27;</span></span><br><span class="line"># ./src/index.less</span><br><span class="line">@myColor: blue;</span><br><span class="line">li&#123;</span><br><span class="line">  <span class="attr">color</span>: @myColor;</span><br><span class="line">&#125;</span><br><span class="line"># webpack.config.js =&gt; <span class="built_in">module</span>.exports.module.rules.xxx</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          <span class="string">&#x27;style-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;postcss-loader&#x27;</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.less$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          <span class="string">&#x27;style-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;less-loader&#x27;</span>,</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.scss$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          <span class="string">&#x27;style-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;sass-loader&#x27;</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="4-configuration"><a href="#4-configuration" class="headerlink" title="4. configuration"></a>4. configuration</h2><h3 id="版本事项"><a href="#版本事项" class="headerlink" title="版本事项"></a>版本事项</h3><blockquote>以下的这些配置基于 webpack 4.x, 当使用webpack5 时可能有一些变动</blockquote>

<p><a href="https://v4.webpack.docschina.org/concepts/">webpack4.x</a><br><a href="https://webpack.docschina.org/concepts/">webpack5</a></p>
<h3 id="entry"><a href="#entry" class="headerlink" title="entry"></a>entry</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 新建目录src</span><br><span class="line">    默认入口: ./src/index.js</span><br><span class="line">#</span><br><span class="line">  多入口打包 </span><br><span class="line">  <span class="attr">entry</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;jquery&#x27;</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;angular&#x27;</span>: <span class="string">&#x27;./src/2.js&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line"># 根目录创建webpack.config.js</span><br><span class="line"> <span class="comment">// entry: string   生成一个chunk 输出一个 bundle</span></span><br><span class="line"> <span class="comment">// entry: sring[]  生成一个chunk 输出一个 bundle</span></span><br><span class="line"> <span class="comment">// entry: object   有几个入口文件就生成几个 chunk 和 bundle </span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">entry</span>: <span class="string">&quot;./src/main.js&quot;</span>, </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<h3 id="output"><a href="#output" class="headerlink" title="output"></a>output</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">  默认出口: ./dist/main.js</span><br><span class="line">#</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">output</span>: &#123; </span><br><span class="line">    <span class="attr">path</span>: path.join(__dirname, <span class="string">&quot;dist&quot;</span>),</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&quot;bundle.js&quot;</span>,</span><br><span class="line">    <span class="comment">// 资源公众路径前缀 </span></span><br><span class="line">    <span class="comment">// images/a.jpg =&gt; /images/a.jpg</span></span><br><span class="line">    <span class="attr">publicPath</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="attr">chunkFilename</span>: <span class="string">&#x27;js/[name]_chunk.js&#x27;</span>,</span><br><span class="line">    <span class="comment">// 整个库向外保留的变量名</span></span><br><span class="line">    <span class="attr">library</span>: <span class="string">&#x27;[name]&#x27;</span></span><br><span class="line">    <span class="comment">// 变量名添加到顶级作用域 global</span></span><br><span class="line">    <span class="attr">libraryTarget</span>: <span class="string">&#x27;window&#x27;</span>            </span><br><span class="line"> &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="mode"><a href="#mode" class="headerlink" title="mode"></a>mode</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;development production&#x27;</span> </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<h3 id="devServer"><a href="#devServer" class="headerlink" title="devServer"></a>devServer</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">port</span>: <span class="number">5000</span>,</span><br><span class="line">  <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">  <span class="attr">open</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">hot</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">proxy</span>: &#123;</span><br><span class="line"> <span class="comment">/* </span></span><br><span class="line"><span class="comment"> 本地 :5000 端口服务器接受到 /api/xxx 的请求</span></span><br><span class="line"><span class="comment"> 就会把请求转发到另外一个服务器 :3000</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">       <span class="attr">target</span>: <span class="string">&#x27;http://localhost:3000&#x27;</span>,</span><br><span class="line">  <span class="comment">// 请求路径重写：将 /api/xxx --&gt; /xxx （去掉/api）</span></span><br><span class="line">       <span class="attr">pathRewrite</span>: &#123;</span><br><span class="line">         <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 不显示服务器日志信息</span></span><br><span class="line">  <span class="attr">clientLogLevel</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">  <span class="comment">// 除了一些基本启动信息以外，其他内容都不要显示</span></span><br><span class="line">  <span class="attr">quiet</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="comment">// 如果报错 不要全屏提示</span></span><br><span class="line">  <span class="attr">overlay</span>: <span class="literal">false</span></span><br><span class="line">  <span class="comment">// 启动gzip压缩</span></span><br><span class="line">  <span class="attr">compress</span>: <span class="literal">true</span>,  </span><br><span class="line">  <span class="attr">watchContentBase</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">watchOptions</span>: &#123;</span><br><span class="line">          <span class="comment">// 忽略文件</span></span><br><span class="line">          <span class="attr">ignored</span>: <span class="regexp">/node_modules/</span></span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  # <span class="number">4.0</span> webpack</span><br><span class="line">  <span class="comment">// 影响本地资源的访问  express.static</span></span><br><span class="line">  <span class="comment">// 是对 output 打包文件物理存储位置的映射</span></span><br><span class="line">  <span class="attr">publicPath</span>: <span class="string">&quot;/assets/&quot;</span>,</span><br><span class="line">  <span class="comment">// html页面的路径 (默认就是项目根路径) </span></span><br><span class="line">  <span class="comment">// 初始相对路径是webpack.config 如果dist和他同级 </span></span><br><span class="line">  <span class="comment">// contentBase: &#x27;./dist&#x27;</span></span><br><span class="line">  <span class="attr">contentBase</span>: resolve(__dirname, <span class="string">&#x27;dist&#x27;</span>)</span><br><span class="line">  <span class="comment">// 监视 contentBase 目录下的所有文件 文件变化就会 reload</span></span><br><span class="line">  # <span class="number">5.0</span> webpack</span><br><span class="line">  <span class="comment">// 默认指定为 public 目录</span></span><br><span class="line">  <span class="attr">static</span>: &#123; <span class="comment">//false</span></span><br><span class="line">    <span class="attr">directory</span>: path.join(__dirname, <span class="string">&#x27;assets&#x27;</span>),</span><br><span class="line">    <span class="attr">publicPath</span>: <span class="string">&#x27;/index.html&#x27;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="module"><a href="#module" class="headerlink" title="module"></a>module</h3><h4 id="noParse"><a href="#noParse" class="headerlink" title="noParse"></a>noParse</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">// 防止 webpack 解析这些文件 </span></span><br><span class="line">  <span class="comment">// 这些文件内不能含有 import require define</span></span><br><span class="line">  <span class="comment">// 可以提高性能</span></span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">noParse</span>: <span class="regexp">/jquery|lodash/</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="rules"><a href="#rules" class="headerlink" title="rules"></a>rules</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [<span class="string">&#x27;style-loader&#x27;</span>, <span class="string">&#x27;css-loader&#x27;</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.js$/</span></span><br><span class="line">        <span class="comment">// 排除 node_modules 下的js文件</span></span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        <span class="comment">// 只检查 src 下的js文件</span></span><br><span class="line">        include: resolve(__dirname, <span class="string">&#x27;scr&#x27;</span>),</span><br><span class="line">        <span class="comment">// pre:优先执行 post:延后执行</span></span><br><span class="line">        <span class="attr">enforce</span>: <span class="string">&#x27;pre&#x27;</span>,</span><br><span class="line">        <span class="attr">loader</span>: <span class="string">&#x27;eslint-loader&#x27;</span>,</span><br><span class="line">        <span class="attr">options</span>: &#123; &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 当规则匹配时 只使用第一个成功的匹配规则</span></span><br><span class="line">        <span class="attr">oneOf</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            </span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">       &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="oneOf"><a href="#oneOf" class="headerlink" title="oneOf"></a>oneOf</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 当规则匹配时 只使用第一个成功的匹配规则</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">module</span>:&#123;</span><br><span class="line">    <span class="attr">rules</span>:[</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">oneOf</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="attr">test</span>: <span class="regexp">/\.(jpg|png|gif)/</span>,</span><br><span class="line">              loader: <span class="string">&#x27;url-loader&#x27;</span>,</span><br><span class="line">              <span class="attr">options</span>: &#123;</span><br><span class="line">                <span class="attr">limit</span>: <span class="number">8</span> * <span class="number">1024</span>,</span><br><span class="line">                <span class="attr">name</span>: <span class="string">&#x27;[hash:10].[ext]&#x27;</span>,</span><br><span class="line">                <span class="attr">outputPath</span>: <span class="string">&#x27;imgs&#x27;</span>,</span><br><span class="line">                <span class="attr">esModule</span>: <span class="literal">false</span></span><br><span class="line">              &#125;</span><br><span class="line">           &#125;,</span><br><span class="line">           &#123;</span><br><span class="line">              <span class="attr">test</span>: <span class="regexp">/\.html$/</span>,</span><br><span class="line">              loader: <span class="string">&#x27;html-loader&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">exclude</span>: <span class="regexp">/\.(js|css|less|html|jpg|png|gif)/</span>,</span><br><span class="line">              loader: <span class="string">&#x27;file-loader&#x27;</span>,</span><br><span class="line">              <span class="attr">options</span>: &#123;</span><br><span class="line">                <span class="attr">outputPath</span>: <span class="string">&#x27;media&#x27;</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="resolve"><a href="#resolve" class="headerlink" title="resolve"></a>resolve</h3><h4 id="alias"><a href="#alias" class="headerlink" title="alias"></a>alias</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>) </span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: path.resolve(__dirname, <span class="string">&#x27;src&#x27;</span>),</span><br><span class="line">      <span class="string">&#x27;@/components&#x27;</span>:</span><br><span class="line">       path.resolve(__dirname, <span class="string">&#x27;..&#x27;</span>, <span class="string">&#x27;src/components&#x27;</span>),</span><br><span class="line">      <span class="string">&#x27;@/utils&#x27;</span>:</span><br><span class="line">      path.resolve(__dirname, <span class="string">&#x27;..&#x27;</span>, <span class="string">&#x27;src/utils&#x27;</span>),</span><br><span class="line">      <span class="string">&#x27;@/services&#x27;</span>:</span><br><span class="line">      path.resolve(__dirname, <span class="string">&#x27;..&#x27;</span>, <span class="string">&#x27;src/services&#x27;</span>),</span><br><span class="line">      <span class="string">&#x27;@/models&#x27;</span>: </span><br><span class="line">      path.resolve(__dirname, <span class="string">&#x27;..&#x27;</span>, <span class="string">&#x27;src/models&#x27;</span>),</span><br><span class="line">      <span class="string">&#x27;@/pages&#x27;</span>:</span><br><span class="line">      path.resolve(__dirname, <span class="string">&#x27;..&#x27;</span>, <span class="string">&#x27;src/pages&#x27;</span>),</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="extensions-modules"><a href="#extensions-modules" class="headerlink" title="extensions modules"></a>extensions modules</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="comment">// 配置省略文件路径的后缀名</span></span><br><span class="line">    <span class="attr">extensions</span>: [<span class="string">&#x27;.js&#x27;</span>,<span class="string">&#x27;.json&#x27;</span>,<span class="string">&#x27;.jsx&#x27;</span>,<span class="string">&#x27;.css&#x27;</span>]</span><br><span class="line">    <span class="comment">// 告诉 webpack 解析模块去找那个目录</span></span><br><span class="line">    <span class="attr">modules</span>: [</span><br><span class="line">      resolve(__dirname, <span class="string">&#x27;../../node_modules&#x27;</span>),</span><br><span class="line">      <span class="string">&#x27;node_modules&#x27;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="plugins"><a href="#plugins" class="headerlink" title="plugins"></a>plugins</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    </span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="externals"><a href="#externals" class="headerlink" title="externals"></a>externals</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 拒绝 jqery 被打包</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">externals</span>: &#123;</span><br><span class="line">    <span class="attr">jquery</span>: <span class="string">&#x27;jQuery&#x27;</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">     <span class="keyword">new</span> webpack.ProvidePlugin(&#123;</span><br><span class="line">      <span class="attr">$</span>: <span class="string">&quot;jquery&quot;</span>,</span><br><span class="line">     &#125;),</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Optimization"><a href="#Optimization" class="headerlink" title="Optimization"></a>Optimization</h3><h4 id="splitChunks"><a href="#splitChunks" class="headerlink" title="splitChunks"></a>splitChunks</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将 node_modules 中代码打包进一个 chunk </span></span><br><span class="line"><span class="comment">// 自动分析多入口 chunk 有没有公共文件 有的话会打包成单独一个 chunk</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">optimization</span>: &#123;</span><br><span class="line">    <span class="attr">splitChunks</span>: &#123;</span><br><span class="line">      <span class="attr">chunks</span>: <span class="string">&#x27;all async&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="devtool"><a href="#devtool" class="headerlink" title="devtool"></a>devtool</h3><h4 id="source-map"><a href="#source-map" class="headerlink" title="source-map"></a>source-map</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">devtool</span>: <span class="string">&#x27;cheap-module-source-map&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">#</span><br><span class="line">source-map: 一种 提供源代码到构建后代码映射 技术 （如果构建后代码出错了，通过映射可以追踪源代码错误）</span><br><span class="line">  </span><br><span class="line">[inline-|hidden-|<span class="built_in">eval</span>-][nosources-][cheap-[<span class="built_in">module</span>-]]source-map</span><br><span class="line">  </span><br><span class="line">      source-map：外部</span><br><span class="line">        错误代码准确信息 和 源代码的错误位置</span><br><span class="line">      inline-source-map：内联</span><br><span class="line">        只生成一个内联source-map</span><br><span class="line">        错误代码准确信息 和 源代码的错误位置</span><br><span class="line">      hidden-source-map：外部</span><br><span class="line">        错误代码错误原因，但是没有错误位置</span><br><span class="line">        不能追踪源代码错误，只能提示到构建后代码的错误位置</span><br><span class="line">      <span class="built_in">eval</span>-source-map：内联</span><br><span class="line">        每一个文件都生成对应的source-map，都在<span class="built_in">eval</span></span><br><span class="line">        错误代码准确信息 和 源代码的错误位置</span><br><span class="line">      nosources-source-map：外部</span><br><span class="line">        错误代码准确信息, 但是没有任何源代码信息</span><br><span class="line">      cheap-source-map：外部</span><br><span class="line">        错误代码准确信息 和 源代码的错误位置 </span><br><span class="line">        只能精确的行</span><br><span class="line">      cheap-<span class="built_in">module</span>-source-map：外部</span><br><span class="line">        错误代码准确信息 和 源代码的错误位置 </span><br><span class="line">        <span class="built_in">module</span>会将loader的source map加入</span><br><span class="line">  </span><br><span class="line">    内联 和 外部的区别：<span class="number">1.</span> 外部生成了文件，内联没有 <span class="number">2.</span> 内联构建速度更快</span><br><span class="line">  </span><br><span class="line">      开发环境：速度快，调试更友好</span><br><span class="line">        速度快(<span class="built_in">eval</span>&gt;inline&gt;cheap&gt;...)</span><br><span class="line">          <span class="built_in">eval</span>-cheap-souce-map</span><br><span class="line">          <span class="built_in">eval</span>-source-map</span><br><span class="line">        调试更友好  </span><br><span class="line">          souce-map</span><br><span class="line">          cheap-<span class="built_in">module</span>-souce-map</span><br><span class="line">          cheap-souce-map</span><br><span class="line">  </span><br><span class="line">        --&gt; <span class="built_in">eval</span>-source-map  / <span class="built_in">eval</span>-cheap-<span class="built_in">module</span>-souce-map</span><br><span class="line">  </span><br><span class="line">      生产环境：源代码要不要隐藏? 调试要不要更友好</span><br><span class="line">        内联会让代码体积变大，所以在生产环境不用内联</span><br><span class="line">        nosources-source-map 全部隐藏</span><br><span class="line">        hidden-source-map 只隐藏源代码，会提示构建后代码错误信息</span><br><span class="line">  </span><br><span class="line">        --&gt; source-map / cheap-<span class="built_in">module</span>-souce-map</span><br><span class="line">                                    </span><br></pre></td></tr></table></figure>



<h2 id="4-demo"><a href="#4-demo" class="headerlink" title="4. demo"></a>4. demo</h2><h3 id="css抽离"><a href="#css抽离" class="headerlink" title="css抽离"></a>css抽离</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">plugins: [</span><br><span class="line">   <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">     <span class="comment">// 对输出的css文件进行重命名</span></span><br><span class="line">     <span class="attr">filename</span>: <span class="string">&#x27;css/built.css&#x27;</span></span><br><span class="line">   &#125;),</span><br><span class="line">   <span class="comment">// 压缩css</span></span><br><span class="line">   <span class="keyword">new</span> OptimizeCssAssetsWebpackPlugin()</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">  &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [ <span class="string">&#x27;file-loader&#x27;</span>]</span><br><span class="line">             [<span class="string">&#x27;file-loader?name=[name].bundle[hash].css&#x27;</span>]</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>

<h3 id="js抽离"><a href="#js抽离" class="headerlink" title="js抽离"></a>js抽离</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">output: &#123;</span><br><span class="line">   <span class="attr">filename</span>: <span class="string">&#x27;js/[name].js&#x27;</span>,</span><br><span class="line">   <span class="attr">path</span>: path.resolve(__dirname, <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure>



<h3 id="js语法检查"><a href="#js语法检查" class="headerlink" title="js语法检查"></a>js语法检查</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line">eslint eslint-loader</span><br><span class="line">package.json 中添加</span><br><span class="line"><span class="comment">// 排除第三方库 只检查自己的代码</span></span><br><span class="line"><span class="string">&quot;eslintConfig&quot;</span>: &#123; <span class="string">&quot;extends&quot;</span>: <span class="string">&quot;airbnb-base&quot;</span>&#125;</span><br><span class="line">#</span><br><span class="line"><span class="attr">module</span>: &#123;</span><br><span class="line">  <span class="attr">rules</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">test</span>: <span class="regexp">/\.js$/</span>,</span><br><span class="line">      exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">      loader: <span class="string">&#x27;eslint-loader&#x27;</span>,</span><br><span class="line">      <span class="attr">options</span>: &#123;</span><br><span class="line">            <span class="comment">// 自动修复eslint的错误</span></span><br><span class="line">        <span class="attr">fix</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="代码切割"><a href="#代码切割" class="headerlink" title="代码切割"></a>代码切割</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 多入口 自动打包多个文件</span><br><span class="line">   <span class="attr">entry</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;jquery&#x27;</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;angular&#x27;</span>: <span class="string">&#x27;./src/2.js&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line"><span class="number">2.</span> 异部的chunk</span><br><span class="line">   <span class="built_in">require</span>.ensure([],<span class="function"><span class="keyword">function</span>(<span class="params">_require</span>)</span>&#123;</span><br><span class="line">     _require(<span class="string">&#x27;./xxx&#x27;</span>)</span><br><span class="line">   &#125;)</span><br><span class="line">  <span class="keyword">import</span>(<span class="string">&#x27;./2.css&#x27;</span>).then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"># </span><br><span class="line"><span class="number">3.</span> </span><br><span class="line"><span class="attr">optimization</span>: &#123;</span><br><span class="line">  <span class="attr">splitChunks</span>: &#123;</span><br><span class="line">    <span class="attr">chunks</span>: <span class="string">&#x27;all&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">#</span><br><span class="line"><span class="attr">externals</span>: &#123;</span><br><span class="line">  <span class="attr">jquery</span>: <span class="string">&#x27;jQuery&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">cdn</span><br></pre></td></tr></table></figure>

<h3 id="dll"><a href="#dll" class="headerlink" title="dll"></a>dll</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line">硬链接一个 包,再手动scrit引入这个包 之后webpack就不用编译了</span><br><span class="line">#</span><br><span class="line">yarn add add-asset-html-webpack-plugin</span><br><span class="line">webpack --config webpack.config.dll.js &amp;&amp; webpack</span><br><span class="line"># 文件路径</span><br><span class="line">  webpack.config.js</span><br><span class="line">  webpack.config.dll.js</span><br><span class="line">  dist</span><br><span class="line">     index.html    </span><br><span class="line">  src</span><br><span class="line">  public</span><br><span class="line">  dll</span><br><span class="line">     jquery</span><br><span class="line">     manifest.json</span><br><span class="line"># webpack.config.js</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> AddAssetHtmlPlugin = <span class="built_in">require</span>(<span class="string">&#x27;add-asset-html-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="built_in">module</span>.export = &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">externals</span>: &#123;</span><br><span class="line">    <span class="attr">jquery</span>: <span class="string">&#x27;jQuery&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>:[</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      <span class="attr">template</span>: <span class="string">&#x27;./index.html&#x27;</span>,</span><br><span class="line">      <span class="attr">filename</span>: <span class="string">&#x27;index.html&#x27;</span>,</span><br><span class="line">      <span class="attr">minify</span>: &#123; <span class="attr">removeComments</span>: <span class="literal">true</span> &#125;</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="comment">// 告诉webpack哪些库不参与打包，同时使用时的名称也得变~</span></span><br><span class="line">    <span class="keyword">new</span> webpack.DllReferencePlugin(&#123;</span><br><span class="line">        <span class="attr">manifest</span>: resolve(__dirname, <span class="string">&#x27;dll/manifest.json&#x27;</span>)</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="comment">// 将某个文件打包输出去，并在html中自动引入该资源</span></span><br><span class="line">    <span class="keyword">new</span> AddAssetHtmlPlugin(&#123;</span><br><span class="line">       <span class="attr">filepath</span>: path.resolve(__dirname, <span class="string">&#x27;dll/jquery.js&#x27;</span>),</span><br><span class="line">       <span class="attr">publicPath</span>: <span class="string">&#x27;../dll&#x27;</span>,</span><br><span class="line">       <span class="attr">outputPath</span>: <span class="string">&#x27;vendor&#x27;</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"># webpack.config.dll.js</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">entry</span>: &#123;</span><br><span class="line">    <span class="attr">jquery</span>: [<span class="string">&#x27;jquery&#x27;</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;[name].js&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>: path.resolve(__dirname, <span class="string">&#x27;dll&#x27;</span>),</span><br><span class="line">    <span class="attr">library</span>: <span class="string">&#x27;[name]_[hash]&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="comment">// 打包生成一个 manifest.json --&gt; 提供和jquery映射</span></span><br><span class="line">    <span class="keyword">new</span> webpack.DllPlugin(&#123;</span><br><span class="line">      <span class="comment">// 映射库的暴露的内容名称 和 library 相同</span></span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;[name]_[hash]&#x27;</span>,</span><br><span class="line">      <span class="attr">path</span>: path.join(__dirname, <span class="string">&#x27;dll/manifest.json&#x27;</span>),</span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;production&#x27;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>



<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">externals: &#123;</span><br><span class="line">    <span class="attr">jquery</span>: <span class="string">&#x27;jQuery&#x27;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="keyword">new</span> webpack.ProvidePlugin(&#123;</span><br><span class="line">   <span class="attr">$</span>: path.resolve(path.join(__dirname, <span class="string">&#x27;dll/jquery.js&#x27;</span>))</span><br><span class="line">&#125;),</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Webpack</category>
      </categories>
      <tags>
        <tag>Webpack</tag>
      </tags>
  </entry>
</search>
